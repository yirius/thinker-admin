<?php


namespace Yirius\Admin\renders\page;

use Yirius\Admin\support\abstracts\LayoutAbstract;

/**
 * Class ThinkerCols
 * @package Yirius\Admin\renders\page
 * @method ThinkerCols setXs(int $value);
 * @method ThinkerCols setSm(int $value);
 * @method ThinkerCols setmd(int $value);
 * @method ThinkerCols setlg(int $value);
 *
 * @method ThinkerCols setXsOffset(int $value);
 * @method ThinkerCols setSmOffset(int $value);
 * @method ThinkerCols setMdOffset(int $value);
 * @method ThinkerCols setLgOffset(int $value);
 *
 * @method ThinkerCols setXsBlock();
 * @method ThinkerCols setSmBlock();
 * @method ThinkerCols setMdBlock();
 * @method ThinkerCols setLgBlock();
 *
 * @method ThinkerCols setXsInline();
 * @method ThinkerCols setSmInline();
 * @method ThinkerCols setMdInline();
 * @method ThinkerCols setLgInline();
 *
 * @method ThinkerCols setXsInlineBlock();
 * @method ThinkerCols setSmInlineBlock();
 * @method ThinkerCols setmdInlineBlock();
 * @method ThinkerCols setLgInlineBlock();
 *
 * @method ThinkerCols setHideXs();
 * @method ThinkerCols setHideSm();
 * @method ThinkerCols setHideMd();
 * @method ThinkerCols setHideLg();
 */
class ThinkerCols extends LayoutAbstract
{
    /**
     * ThinkerRows constructor.
     * @param callable|null $callable
     */
    public function __construct(callable $callable = null)
    {
        parent::__construct();

        if(is_callable($callable)){
            call($callable, [$this]);
        }
    }

    private $layouts = [];

    private $htmlLayout = "";

    public function addLayout(LayoutAbstract $layoutAbstract) {
        if($layoutAbstract != null) {
            $this->layouts[] = $layoutAbstract;
        }
        return $this;
    }

    public function addHtmlLayout($html) {
        if(!empty($html)) {
            $this->htmlLayout .= $html;
        }
        return $this;
    }

    /**
     * @title       render
     * @description 每一个组件需要继承渲染接口
     * @createtime  2019/11/14 4:26 下午
     * @return string
     * @author      yangyuance
     */
    public function render()
    {
        $layouts = join("\n", array_map(function (LayoutAbstract $layoutAbstract) {
            return$layoutAbstract->render();
        }, $this->layouts));

        return <<<HTML
<div class="{$this->getClassString()}" {$this->getAttrString()}>
{$layouts}
{$this->htmlLayout}
</div>
HTML;
    }

    /**
     * @title      __call
     * @description
     * @createtime 2019/11/15 2:28 下午
     * @param $name
     * @param $arguments
     * @return $this|mixed|string|ThinkerLayout
     * @author     yangyuance
     */
    public function __call($name, $arguments)
    {
        $oriName = $name;

        //判断第一个字符，一般大写，然后将其转为小写
        $firstChar = substr($name, 3, 1);
        $name = strtolower($firstChar) . substr($name, 4);

        //一些默认操作，不需要重写了
        if(in_array($name, ['xs', 'sm', 'md', 'lg'])){
            $this->addClass("layui-col-" . $name . (isset($arguments[0]) ? intval($arguments[0]) : 6));
            return $this;
        }else if(in_array($name, ['xsOffset', 'smOffset', 'mdOffset', 'lgOffset', 'spaceOffset'])){
            $this->addClass("layui-col-".substr($name, 0, 2)."-offset" . (isset($arguments[0]) ? intval($arguments[0]) : 6));
            return $this;
        }else if(in_array($name, ['xsBlock', 'smBlock', 'mdBlock', 'lgBlock'])){
            $this->addClass("layui-show-".substr($name, 0, 2)."-block");
            return $this;
        }else if(in_array($name, ['xsInline', 'smInline', 'mdInline', 'lgInline'])){
            $this->addClass("layui-show-".substr($name, 0, 2)."-inline");
            return $this;
        }else if(in_array($name, ['xsInlineBlock', 'smInlineBlock', 'mdInlineBlock', 'lgInlineBlock'])){
            $this->addClass("layui-show-".substr($name, 0, 2)."-inline-block");
            return $this;
        }else if(in_array($name, ['hideXs', 'hideSm', 'hideMd', 'hideLg'])){
            $this->addClass("layui-hide-".substr($name, 5, 2));
            return $this;
        }

        return parent::__call($oriName, $arguments); // TODO: Change the autogenerated stub
    }
}