<?php


namespace Yirius\Admin\form\assemblys;


use Yirius\Admin\ThinkerAdmin;

/**
 * Class TinyEditor
 * @package Yirius\Admin\form\assemblys
 * @method TinyEditor language($language);
 * @method TinyEditor plugins($plugins);
 * @method TinyEditor toolbar($toolbar);
 * @method TinyEditor resize(bool $resize);
 * @method TinyEditor elementpath(bool $elementpath);
 * @method TinyEditor branding(bool $branding);
 * @method TinyEditor menubar($menubar);
 * @method TinyEditor height(int $height);
 */
class TinyEditor extends Textarea
{
    /**
     * @title      _init
     * @description
     * @createtime 2019/11/16 11:13 下午
     * @author     yangyuance
     */
    protected function _init()
    {
        ThinkerAdmin::script("tinymce", false, true);

        $this->setAttrs('lay-tinymce', '');
    }

    /**
     * @title      setBaseUrl
     * @description 设置上传网址
     * @createtime 2019/11/19 6:31 下午
     * @param $url
     * @return $this
     * @author     yangyuance
     */
    public function imageUploadUrl($url)
    {
        $this->setAttrs('data-images-upload-url', $url);

        return $this;
    }

    /**
     * @title      setQuickBar
     * @description
     * @createtime 2019/11/19 6:33 下午
     * @param $quickbar
     * @return $this
     * @author     yangyuance
     */
    public function quickbarsSelectionToolbar($quickbar)
    {
        $this->setAttrs('data-quickbars-selection-toolbar', $quickbar);

        return $this;
    }

    /**
     * @title      contextmenuNeverUseNative
     * @description
     * @createtime 2019/11/19 6:39 下午
     * @param bool $bool
     * @return $this
     * @author     yangyuance
     */
    public function contextmenuNeverUseNative($bool)
    {
        $this->setAttrs('data-contextmenu-never-use-native', $bool);

        return $this;
    }

    /**
     * @title      __call
     * @description
     * @createtime 2019/11/19 6:42 下午
     * @param $name
     * @param $arguments
     * @return $this|mixed|string|Textarea
     * @author     yangyuance
     */
    public function __call($name, $arguments)
    {
        if(in_array($name, ['language', 'plugins', 'toolbar', 'resize', 'elementpath', 'branding', 'menubar', 'height'])){
            $this->setAttrs('data-'.$name, $arguments[0]);
            return $this;
        }

        return parent::__call($name, $arguments); // TODO: Change the autogenerated stub
    }
}